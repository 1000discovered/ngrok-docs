"use strict";(self.webpackChunkngrok_doc=self.webpackChunkngrok_doc||[]).push([[24082],{74730:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>y,contentTitle:()=>f,default:()=>T,frontMatter:()=>c,metadata:()=>b,toc:()=>v});var a=n(51163),l=(n(59496),n(49613));const r={toc:[{value:"Example Request",id:"example-request",level:4}]},i="wrapper";function s(t){let{components:e,...n}=t;return(0,l.kt)(i,(0,a.Z)({},r,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"example-request"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n-X GET \\\n-H "Authorization: Bearer {API_KEY}" \\\n-H "Ngrok-Version: 2" \\\nhttps://api.ngrok.com/tunnels\n')))}s.isMDXComponent=!0;const d={toc:[{value:"Example Response",id:"example-response",level:4}]},p="wrapper";function o(t){let{components:e,...n}=t;return(0,l.kt)(p,(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"example-response"},"Example Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "tunnels": [\n        {\n            "id": "tn_2TMGH0ybZBbfx1JqjUyEUbF0mBU",\n            "public_url": "https://eae72ddee951.ngrok.paid",\n            "started_at": "2023-07-31T23:17:24Z",\n            "proto": "https",\n            "region": "us",\n            "tunnel_session": {\n                "id": "ts_2TMGH5pURxBRFkvbgAy2558Pm9n",\n                "uri": "https://api.ngrok.com/tunnel_sessions/ts_2TMGH5pURxBRFkvbgAy2558Pm9n"\n            },\n            "endpoint": {\n                "id": "ep_2TMGH0ybZBbfx1JqjUyEUbF0mBU",\n                "uri": "https://api.ngrok.com/endpoints/ep_2TMGH0ybZBbfx1JqjUyEUbF0mBU"\n            },\n            "forwards_to": "http://localhost:80"\n        },\n        {\n            "id": "tn_2TMGGRKTToNnKm5ZmGoVv4qLmSi",\n            "public_url": "://:0",\n            "started_at": "2023-07-31T23:17:19Z",\n            "region": "us",\n            "tunnel_session": {\n                "id": "ts_2TMGGQk5w8vCXnNM4UGNs0sZVsf",\n                "uri": "https://api.ngrok.com/tunnel_sessions/ts_2TMGGQk5w8vCXnNM4UGNs0sZVsf"\n            },\n            "labels": {\n                "baz": "qux",\n                "foo": "bar"\n            },\n            "forwards_to": "http://localhost:80"\n        }\n    ],\n    "uri": "https://api.ngrok.com/tunnels",\n    "next_page_uri": null\n}\n')))}o.isMDXComponent=!0;const u={toc:[{value:"Example Request",id:"example-request",level:4}]},m="wrapper";function k(t){let{components:e,...n}=t;return(0,l.kt)(m,(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"example-request"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n-X GET \\\n-H "Authorization: Bearer {API_KEY}" \\\n-H "Ngrok-Version: 2" \\\nhttps://api.ngrok.com/tunnels/tn_2TMGH0ybZBbfx1JqjUyEUbF0mBU\n')))}k.isMDXComponent=!0;const g={toc:[{value:"Example Response",id:"example-response",level:4}]},N="wrapper";function h(t){let{components:e,...n}=t;return(0,l.kt)(N,(0,a.Z)({},g,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"example-response"},"Example Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "tn_2TMGH0ybZBbfx1JqjUyEUbF0mBU",\n    "public_url": "https://eae72ddee951.ngrok.paid",\n    "started_at": "2023-07-31T23:17:24Z",\n    "proto": "https",\n    "region": "us",\n    "tunnel_session": {\n        "id": "ts_2TMGH5pURxBRFkvbgAy2558Pm9n",\n        "uri": "https://api.ngrok.com/tunnel_sessions/ts_2TMGH5pURxBRFkvbgAy2558Pm9n"\n    },\n    "endpoint": {\n        "id": "ep_2TMGH0ybZBbfx1JqjUyEUbF0mBU",\n        "uri": "https://api.ngrok.com/endpoints/ep_2TMGH0ybZBbfx1JqjUyEUbF0mBU"\n    },\n    "forwards_to": "http://localhost:80"\n}\n')))}h.isMDXComponent=!0;const c={},f="Tunnels",b={unversionedId:"api/resources/tunnels",id:"api/resources/tunnels",title:"Tunnels",description:"---",source:"@site/docs/api/resources/tunnels.mdx",sourceDirName:"api/resources",slug:"/api/resources/tunnels",permalink:"/docs/api/resources/tunnels",draft:!1,editUrl:"https://github.com/ngrok/ngrok-docs/edit/main/docs/api/resources/tunnels.mdx",tags:[],version:"current",lastUpdatedBy:"Russ Savage",lastUpdatedAt:1691862991,formattedLastUpdatedAt:"Aug 12, 2023",frontMatter:{},sidebar:"docs",previous:{title:"Agent Ingresses",permalink:"/docs/api/resources/agent-ingresses"},next:{title:"Tunnel Sessions",permalink:"/docs/api/resources/tunnel-sessions"}},y={},v=[{value:"List Tunnels",id:"list-tunnels",level:2},{value:"Request",id:"request",level:3},{value:"Response",id:"response",level:3},{value:"Fields",id:"fields",level:4},{value:"Tunnel fields",id:"tunnel-fields",level:4},{value:"Ref fields",id:"ref-fields",level:4},{value:"Get Tunnel",id:"get-tunnel",level:2},{value:"Request",id:"request-1",level:3},{value:"Response",id:"response-1",level:3},{value:"Fields",id:"fields-1",level:4},{value:"Ref fields",id:"ref-fields-1",level:4}],R={toc:v},C="wrapper";function T(t){let{components:e,...n}=t;return(0,l.kt)(C,(0,a.Z)({},R,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"tunnels"},"Tunnels"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"list-tunnels"},"List Tunnels"),(0,l.kt)("p",null,"List all online tunnels currently running on the account."),(0,l.kt)("h3",{id:"request"},"Request"),(0,l.kt)("p",null,"GET /tunnels"),(0,l.kt)(s,{mdxType:"TunnelsListRequest"}),(0,l.kt)("h3",{id:"response"},"Response"),(0,l.kt)("p",null,"Returns a 200 response on success"),(0,l.kt)(o,{mdxType:"TunnelsListResponse"}),(0,l.kt)("h4",{id:"fields"},"Fields"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tunnels")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#tunnel-fields"},"Tunnel")),(0,l.kt)("td",{parentName:"tr",align:null},"the list of all online tunnels on this account")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uri")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"URI of the tunnels list API resource")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"next_page_uri")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"URI of the next page, or null if there is no next page")))),(0,l.kt)("h4",{id:"tunnel-fields"},"Tunnel fields"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"id")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"unique tunnel resource identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"public_url")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"URL of the ephemeral tunnel's public endpoint")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"started_at")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"timestamp when the tunnel was initiated in RFC 3339 format")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"metadata")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"user-supplied metadata for the tunnel defined in the ngrok configuration file. See the tunnel ",(0,l.kt)("a",{parentName:"td",href:"/secure-tunnels/ngrok-agent/reference/config#common-tunnel-configuration-properties"},"metadata configuration option")," In API version 0, this value was instead pulled from the top-level ",(0,l.kt)("a",{parentName:"td",href:"/secure-tunnels/ngrok-agent/reference/config#metadata"},"metadata configuration option"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"proto")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"tunnel protocol for ephemeral tunnels. one of ",(0,l.kt)("inlineCode",{parentName:"td"},"http"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"https"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"tcp")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"tls"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"region")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"identifier of tune region where the tunnel is running")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tunnel_session")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#ref-fields"},"Ref")),(0,l.kt)("td",{parentName:"tr",align:null},"reference object pointing to the tunnel session on which this tunnel was started")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"endpoint")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#ref-fields"},"Ref")),(0,l.kt)("td",{parentName:"tr",align:null},"the ephemeral endpoint this tunnel is associated with, if this is an agent-initiated tunnel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"labels")),(0,l.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,l.kt)("td",{parentName:"tr",align:null},"the labels the tunnel group backends will match against, if this is a backend tunnel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"backends")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#ref-fields"},"Ref")),(0,l.kt)("td",{parentName:"tr",align:null},"tunnel group backends served by this backend tunnel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"forwards_to")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"upstream address the ngrok agent forwards traffic over this tunnel to. this may be expressed as a URL or a network address.")))),(0,l.kt)("h4",{id:"ref-fields"},"Ref fields"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"id")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"a resource identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uri")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"a uri for locating a resource")))),(0,l.kt)("h2",{id:"get-tunnel"},"Get Tunnel"),(0,l.kt)("p",null,"Get the status of a tunnel by ID"),(0,l.kt)("h3",{id:"request-1"},"Request"),(0,l.kt)("p",null,"GET /tunnels/{id}"),(0,l.kt)(k,{mdxType:"TunnelsGetRequest"}),(0,l.kt)("h3",{id:"response-1"},"Response"),(0,l.kt)("p",null,"Returns a 200 response on success"),(0,l.kt)(h,{mdxType:"TunnelsGetResponse"}),(0,l.kt)("h4",{id:"fields-1"},"Fields"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"id")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"unique tunnel resource identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"public_url")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"URL of the ephemeral tunnel's public endpoint")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"started_at")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"timestamp when the tunnel was initiated in RFC 3339 format")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"metadata")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"user-supplied metadata for the tunnel defined in the ngrok configuration file. See the tunnel ",(0,l.kt)("a",{parentName:"td",href:"/secure-tunnels/ngrok-agent/reference/config#common-tunnel-configuration-properties"},"metadata configuration option")," In API version 0, this value was instead pulled from the top-level ",(0,l.kt)("a",{parentName:"td",href:"/secure-tunnels/ngrok-agent/reference/config#metadata"},"metadata configuration option"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"proto")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"tunnel protocol for ephemeral tunnels. one of ",(0,l.kt)("inlineCode",{parentName:"td"},"http"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"https"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"tcp")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"tls"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"region")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"identifier of tune region where the tunnel is running")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tunnel_session")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#ref-fields"},"Ref")),(0,l.kt)("td",{parentName:"tr",align:null},"reference object pointing to the tunnel session on which this tunnel was started")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"endpoint")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#ref-fields"},"Ref")),(0,l.kt)("td",{parentName:"tr",align:null},"the ephemeral endpoint this tunnel is associated with, if this is an agent-initiated tunnel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"labels")),(0,l.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,l.kt)("td",{parentName:"tr",align:null},"the labels the tunnel group backends will match against, if this is a backend tunnel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"backends")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#ref-fields"},"Ref")),(0,l.kt)("td",{parentName:"tr",align:null},"tunnel group backends served by this backend tunnel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"forwards_to")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"upstream address the ngrok agent forwards traffic over this tunnel to. this may be expressed as a URL or a network address.")))),(0,l.kt)("h4",{id:"ref-fields-1"},"Ref fields"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,l.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"id")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"a resource identifier")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"uri")),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"a uri for locating a resource")))))}T.isMDXComponent=!0}}]);