"use strict";(self.webpackChunkngrok_doc=self.webpackChunkngrok_doc||[]).push([[5275],{7345:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>v,contentTitle:()=>b,default:()=>C,frontMatter:()=>T,metadata:()=>R,toc:()=>L});var l=a(51163),n=(a(59496),a(49613));const r={toc:[{value:"Example Request",id:"example-request",level:4}]},d="wrapper";function i(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,l.Z)({},r,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"example-request"},"Example Request"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n-X PUT \\\n-H "Authorization: Bearer {API_KEY}" \\\n-H "Content-Type: application/json" \\\n-H "Ngrok-Version: 2" \\\n-d \'{"enabled":true,"certificate_authority_ids":["ca_2TMGJkDMPEOQsJsTtw4RAlBRjlM"]}\' \\\nhttps://api.ngrok.com/edges/tls/edgtls_2TMGJoJCsjJkPU8L6x2V8Cqr0ks/mutual_tls\n')))}i.isMDXComponent=!0;const s={toc:[{value:"Example Response",id:"example-response",level:4}]},u="wrapper";function o(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,l.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"example-response"},"Example Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "enabled": true,\n    "certificate_authorities": [\n        {\n            "id": "ca_2TMGJkDMPEOQsJsTtw4RAlBRjlM",\n            "uri": "https://api.ngrok.com/certificate_authorities/ca_2TMGJkDMPEOQsJsTtw4RAlBRjlM"\n        }\n    ]\n}\n')))}o.isMDXComponent=!0;const p={toc:[{value:"Example Request",id:"example-request",level:4}]},m="wrapper";function k(e){let{components:t,...a}=e;return(0,n.kt)(m,(0,l.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"example-request"},"Example Request"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n-X GET \\\n-H "Authorization: Bearer {API_KEY}" \\\n-H "Ngrok-Version: 2" \\\nhttps://api.ngrok.com/edges/tls/edgtls_2TMGJoJCsjJkPU8L6x2V8Cqr0ks/mutual_tls\n')))}k.isMDXComponent=!0;const c={toc:[{value:"Example Response",id:"example-response",level:4}]},g="wrapper";function N(e){let{components:t,...a}=e;return(0,n.kt)(g,(0,l.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"example-response"},"Example Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "enabled": true,\n    "certificate_authorities": [\n        {\n            "id": "ca_2TMGJkDMPEOQsJsTtw4RAlBRjlM",\n            "uri": "https://api.ngrok.com/certificate_authorities/ca_2TMGJkDMPEOQsJsTtw4RAlBRjlM"\n        }\n    ]\n}\n')))}N.isMDXComponent=!0;const h={toc:[{value:"Example Request",id:"example-request",level:4}]},f="wrapper";function M(e){let{components:t,...a}=e;return(0,n.kt)(f,(0,l.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h4",{id:"example-request"},"Example Request"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n-X DELETE \\\n-H "Authorization: Bearer {API_KEY}" \\\n-H "Ngrok-Version: 2" \\\nhttps://api.ngrok.com/edges/tls/edgtls_2TMGJoJCsjJkPU8L6x2V8Cqr0ks/mutual_tls\n')))}M.isMDXComponent=!0;const T={},b="TLS Edge Mutual TLS Module",R={unversionedId:"api/resources/tls-edge-mutual-tls-module",id:"api/resources/tls-edge-mutual-tls-module",title:"TLS Edge Mutual TLS Module",description:"---",source:"@site/docs/api/resources/tls-edge-mutual-tls-module.mdx",sourceDirName:"api/resources",slug:"/api/resources/tls-edge-mutual-tls-module",permalink:"/docs/api/resources/tls-edge-mutual-tls-module",draft:!1,editUrl:"https://github.com/ngrok/ngrok-docs/edit/main/docs/api/resources/tls-edge-mutual-tls-module.mdx",tags:[],version:"current",lastUpdatedBy:"Russ Savage",lastUpdatedAt:1691862991,formattedLastUpdatedAt:"Aug 12, 2023",frontMatter:{},sidebar:"docs",previous:{title:"TLS Edge IP Restriction Module",permalink:"/docs/api/resources/tls-edge-ip-restriction-module"},next:{title:"TLS Edge TLS Termination Module",permalink:"/docs/api/resources/tls-edge-tls-termination-module"}},v={},L=[{value:"Replace TLS Edge Mutual TLS Module",id:"replace-tls-edge-mutual-tls-module",level:2},{value:"Request",id:"request",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Response",id:"response",level:3},{value:"Fields",id:"fields",level:4},{value:"Ref fields",id:"ref-fields",level:4},{value:"Get TLS Edge Mutual TLS Module",id:"get-tls-edge-mutual-tls-module",level:2},{value:"Request",id:"request-1",level:3},{value:"Response",id:"response-1",level:3},{value:"Fields",id:"fields-1",level:4},{value:"Ref fields",id:"ref-fields-1",level:4},{value:"Delete TLS Edge Mutual TLS Module",id:"delete-tls-edge-mutual-tls-module",level:2},{value:"Request",id:"request-2",level:3},{value:"Response",id:"response-2",level:3}],E={toc:L},y="wrapper";function C(e){let{components:t,...a}=e;return(0,n.kt)(y,(0,l.Z)({},E,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"tls-edge-mutual-tls-module"},"TLS Edge Mutual TLS Module"),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"replace-tls-edge-mutual-tls-module"},"Replace TLS Edge Mutual TLS Module"),(0,n.kt)("h3",{id:"request"},"Request"),(0,n.kt)("p",null,"PUT /edges/tls/{id}/mutual_tls"),(0,n.kt)(i,{mdxType:"TLSEdgeMutualTLSModuleReplaceRequest"}),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"enabled")),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"true")," if the module will be applied to traffic, ",(0,n.kt)("inlineCode",{parentName:"td"},"false")," to disable. default ",(0,n.kt)("inlineCode",{parentName:"td"},"true")," if unspecified")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"certificate_authority_ids")),(0,n.kt)("td",{parentName:"tr",align:null},"List","<","string",">"),(0,n.kt)("td",{parentName:"tr",align:null},"list of certificate authorities that will be used to validate the TLS client certificate presented by the initiator of the TLS connection")))),(0,n.kt)("h3",{id:"response"},"Response"),(0,n.kt)("p",null,"Returns a 200 response on success"),(0,n.kt)(o,{mdxType:"TLSEdgeMutualTLSModuleReplaceResponse"}),(0,n.kt)("h4",{id:"fields"},"Fields"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"enabled")),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"true")," if the module will be applied to traffic, ",(0,n.kt)("inlineCode",{parentName:"td"},"false")," to disable. default ",(0,n.kt)("inlineCode",{parentName:"td"},"true")," if unspecified")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"certificate_authorities")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#ref-fields"},"Ref")),(0,n.kt)("td",{parentName:"tr",align:null},"PEM-encoded CA certificates that will be used to validate. Multiple CAs may be provided by concatenating them together.")))),(0,n.kt)("h4",{id:"ref-fields"},"Ref fields"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"id")),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"a resource identifier")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"uri")),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"a uri for locating a resource")))),(0,n.kt)("h2",{id:"get-tls-edge-mutual-tls-module"},"Get TLS Edge Mutual TLS Module"),(0,n.kt)("h3",{id:"request-1"},"Request"),(0,n.kt)("p",null,"GET /edges/tls/{id}/mutual_tls"),(0,n.kt)(k,{mdxType:"TLSEdgeMutualTLSModuleGetRequest"}),(0,n.kt)("h3",{id:"response-1"},"Response"),(0,n.kt)("p",null,"Returns a 200 response on success"),(0,n.kt)(N,{mdxType:"TLSEdgeMutualTLSModuleGetResponse"}),(0,n.kt)("h4",{id:"fields-1"},"Fields"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"enabled")),(0,n.kt)("td",{parentName:"tr",align:null},"boolean"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"true")," if the module will be applied to traffic, ",(0,n.kt)("inlineCode",{parentName:"td"},"false")," to disable. default ",(0,n.kt)("inlineCode",{parentName:"td"},"true")," if unspecified")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"certificate_authorities")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"#ref-fields"},"Ref")),(0,n.kt)("td",{parentName:"tr",align:null},"PEM-encoded CA certificates that will be used to validate. Multiple CAs may be provided by concatenating them together.")))),(0,n.kt)("h4",{id:"ref-fields-1"},"Ref fields"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,n.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"id")),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"a resource identifier")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"uri")),(0,n.kt)("td",{parentName:"tr",align:null},"string"),(0,n.kt)("td",{parentName:"tr",align:null},"a uri for locating a resource")))),(0,n.kt)("h2",{id:"delete-tls-edge-mutual-tls-module"},"Delete TLS Edge Mutual TLS Module"),(0,n.kt)("h3",{id:"request-2"},"Request"),(0,n.kt)("p",null,"DELETE /edges/tls/{id}/mutual_tls"),(0,n.kt)(M,{mdxType:"TLSEdgeMutualTLSModuleDeleteRequest"}),(0,n.kt)("h3",{id:"response-2"},"Response"),(0,n.kt)("p",null,"Returns a 204 response with no body on success"))}C.isMDXComponent=!0}}]);