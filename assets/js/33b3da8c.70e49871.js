"use strict";(self.webpackChunkngrok_doc=self.webpackChunkngrok_doc||[]).push([[70724],{43742:(e,n,t)=>{t.d(n,{Z:()=>l});var a=t(59496),o=t(45924);const r={tabItem:"tabItem_dv_O"};function l(e){let{children:n,hidden:t,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r.tabItem,l),hidden:t},n)}},85428:(e,n,t)=>{t.d(n,{Z:()=>C});var a=t(51163),o=t(59496),r=t(45924),l=t(50891),i=t(83442),u=t(93508),s=t(5897),d=t(84013);function p(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:o}}=e;return{value:n,label:t,attributes:a,default:o}}))}function c(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??p(t);return function(e){const n=(0,s.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function k(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,u._X)(r),(0,o.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=c(e),[l,i]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[u,s]=k({queryString:t,groupId:a}),[p,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,d.Nk)(t);return[a,(0,o.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),h=(()=>{const e=u??p;return g({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:l,selectValue:(0,o.useCallback)((e=>{if(!g({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),m(e)}),[s,m,r]),tabValues:r}}var h=t(54777);const b={tabList:"tabList_sUZh",tabItem:"tabItem_Oiff"};function N(e){let{className:n,block:t,selectedValue:i,selectValue:u,tabValues:s}=e;const d=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),c=e=>{const n=e.currentTarget,t=d.indexOf(n),a=s[t].value;a!==i&&(p(n),u(a))},g=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}n?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n)},s.map((e=>{let{value:n,label:t,attributes:l}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,key:n,ref:e=>d.push(e),onKeyDown:g,onClick:c},l,{className:(0,r.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":i===n})}),t??n)})))}function w(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function f(e){const n=m(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",b.tabList)},o.createElement(N,(0,a.Z)({},e,n)),o.createElement(w,(0,a.Z)({},e,n)))}function C(e){const n=(0,h.Z)();return o.createElement(f,(0,a.Z)({key:String(n)},e))}},64446:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>k,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=t(51163),o=(t(59496),t(49613)),r=t(85428),l=t(43742);const i={title:"How to do Weighted Round-Robin Load Balancing with ngrok Cloud Edges",description:"How to use ngrok Cloud Edges to do weighted round-robin load balancing.",tags:["guides","edges","load-balancing"]},u=void 0,s={unversionedId:"guides/how-to-do-weighted-load-balancing-with-ngrok-cloud-edges",id:"guides/how-to-do-weighted-load-balancing-with-ngrok-cloud-edges",title:"How to do Weighted Round-Robin Load Balancing with ngrok Cloud Edges",description:"How to use ngrok Cloud Edges to do weighted round-robin load balancing.",source:"@site/docs/guides/how-to-do-weighted-load-balancing-with-ngrok-cloud-edges.mdx",sourceDirName:"guides",slug:"/guides/how-to-do-weighted-load-balancing-with-ngrok-cloud-edges",permalink:"/docs/guides/how-to-do-weighted-load-balancing-with-ngrok-cloud-edges",draft:!1,editUrl:"https://github.com/ngrok/ngrok-docs/edit/main/docs/guides/how-to-do-weighted-load-balancing-with-ngrok-cloud-edges.mdx",tags:[{label:"guides",permalink:"/docs/tags/guides"},{label:"edges",permalink:"/docs/tags/edges"},{label:"load-balancing",permalink:"/docs/tags/load-balancing"}],version:"current",lastUpdatedBy:"Russ Savage",lastUpdatedAt:1691862991,formattedLastUpdatedAt:"Aug 12, 2023",frontMatter:{title:"How to do Weighted Round-Robin Load Balancing with ngrok Cloud Edges",description:"How to use ngrok Cloud Edges to do weighted round-robin load balancing.",tags:["guides","edges","load-balancing"]},sidebar:"docs",previous:{title:"Configuring Okta Single Sign-On (SSO)",permalink:"/docs/guides/dashboard-sso-okta-setup"},next:{title:"How to Round-Robin Load Balance with ngrok Cloud Edges",permalink:"/docs/guides/how-to-round-robin-load-balance-with-ngrok-cloud-edges"}},d={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"<strong>Step 1</strong> \u2014 Create a Reserved Domain",id:"step-1--create-a-reserved-domain",level:2},{value:"<strong>Step 2</strong> \u2014 Create a ngrok Cloud Edge",id:"step-2--create-a-ngrok-cloud-edge",level:2},{value:"<strong>Step 3</strong> \u2014 Create Tunnel Group Backends",id:"step-3--create-tunnel-group-backends",level:2},{value:"Create our first backend with label <code>region=us</code>:",id:"create-our-first-backend-with-label-regionus",level:3},{value:"Create our second backend with label <code>region=eu</code>:",id:"create-our-second-backend-with-label-regioneu",level:3},{value:"<strong>Step 4</strong> - Create a Weighted Backend",id:"step-4---create-a-weighted-backend",level:2},{value:"<strong>Step 5</strong> \u2014 Create a Catch-All Route",id:"step-5--create-a-catch-all-route",level:2},{value:"<strong>Step 5</strong> \u2014 Starting tunnels on your ngrok Cloud Edge",id:"step-5--starting-tunnels-on-your-ngrok-cloud-edge",level:2},{value:"Conclusion",id:"conclusion",level:2}],c={toc:p},g="wrapper";function k(e){let{components:n,...i}=e;return(0,o.kt)(g,(0,a.Z)({},c,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("img",{src:t(11591).Z,width:"1618",height:"760"})),(0,o.kt)("p",null,"The purpose of ",(0,o.kt)("strong",{parentName:"p"},"Load balancing")," is to improve application performance and reduce burden by distributing incoming traffic\nacross servers. This leads to faster response times for user-facing applications."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Weighted Round-robin load balancing")," while similar to ",(0,o.kt)("a",{parentName:"p",href:"/guides/how-to-round-robin-load-balance-with-ngrok-cloud-edges/"},"round-robin load balancing"),"\nhere you can assign a numeric weight to all of the applications behind the load balancer. Weights can be\nassigned based on factors such as the application state, server\u2019s processing power or total bandwidth."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"To follow this guide, you will need:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"An ",(0,o.kt)("a",{parentName:"li",href:"https://ngrok.com/pricing"},"ngrok Pro or Enterprise account"),"."),(0,o.kt)("li",{parentName:"ol"},"A local computer with ",(0,o.kt)("inlineCode",{parentName:"li"},"ngrok")," installed ",(0,o.kt)("a",{parentName:"li",href:"https://ngrok.com/download"},"by following our installation guides"),".")),(0,o.kt)("p",null,"If you are going to be following along using ",(0,o.kt)("strong",{parentName:"p"},"ngrok CLI"),", you will need:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"An ",(0,o.kt)("a",{parentName:"li",href:"https://dashboard.ngrok.com/api"},"ngrok API key")," configured on your ",(0,o.kt)("a",{parentName:"li",href:"http://localhost:3000/docs/ngrok-agent/ngrok/#ngrok-api"},"ngrok agent"),".")),(0,o.kt)("p",null,"If you are going to be following along using ",(0,o.kt)("strong",{parentName:"p"},"CURL"),", you will need:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"An ",(0,o.kt)("a",{parentName:"li",href:"https://dashboard.ngrok.com/api"},"ngrok API key")," as an environment variable named ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_API_KEY"),".")),(0,o.kt)("h2",{id:"step-1--create-a-reserved-domain"},(0,o.kt)("strong",{parentName:"h2"},"Step 1")," \u2014 Create a Reserved Domain"),(0,o.kt)("p",null,"We're going to be using ngrok edges to load balance across multiple tunnels."),(0,o.kt)("p",null,"To start load balancing traffic with ngrok edges, you need to have a reserved domain.\nLet\u2019s reserve a subdomain on ",(0,o.kt)("inlineCode",{parentName:"p"},"ngrok.app"),":"),(0,o.kt)(r.Z,{groupId:"guide",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"cli",label:"ngrok CLI",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ngrok api reserved-domains create \\\n    --domain ${NGROK_SUBDOMAIN}.ngrok.app\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_SUBDOMAIN")," as the subdomain you'd like to use for this guide."))),(0,o.kt)(l.Z,{value:"curl",label:"CURL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n    -X POST https://api.ngrok.com/reserved_domains \\\n    -H "Authorization: Bearer ${NGROK_API_KEY}" \\\n    -H "Content-Type: application/json" \\\n    -H "Ngrok-Version: 2" \\\n    -d @- <<BODY\n    {\n        "name":"${NGROK_SUBDOMAIN}.ngrok.app",\n    }\nBODY\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_API_KEY")," to your ngrok API key."),(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_SUBDOMAIN")," as the subdomain you'd like to use for this guide.")))),(0,o.kt)("p",null,"After running, you should see the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'200 OK\n{\n   "id":"rd_2MT5Bqt0UzU0mFQ0zr8m1UQWCfm",\n   ...\n}\n')),(0,o.kt)("p",null,"When you have completed this step, you can move on to the next step."),(0,o.kt)("h2",{id:"step-2--create-a-ngrok-cloud-edge"},(0,o.kt)("strong",{parentName:"h2"},"Step 2")," \u2014 Create a ngrok Cloud Edge"),(0,o.kt)("p",null,"Now we can create a ngrok Cloud Edge that points to our\nnewly reserved domain on port ",(0,o.kt)("inlineCode",{parentName:"p"},"443"),":"),(0,o.kt)(r.Z,{groupId:"guide",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"cli",label:"ngrok CLI",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'ngrok api edges https create \\\n    --description "my edge" \\\n    --hostports "${NGROK_SUBDOMAIN}.ngrok.app:443"\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_SUBDOMAIN")," with the value used in the previous step."))),(0,o.kt)(l.Z,{value:"curl",label:"CURL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n    -X POST https://api.ngrok.com/edges/https \\\n    -H "Authorization: Bearer {NGROK_API_KEY}" \\\n    -H "Content-Type: application/json" \\\n    -H "Ngrok-Version: 2" \\\n    -d @- <<BODY\n    {\n        "description": "",\n        "metadata": "{}",\n        "hostports": ["{NGROK_SUBDOMAIN}.ngrok.app:443"]\n    }\nBODY\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_API_KEY")," to your ngrok API key."),(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_SUBDOMAIN")," with the value used in the previous step.")))),(0,o.kt)("p",null,"After running, you should see:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "edghts_2MT9nzunlKgQ0KRfmA5QK5iiI1J",\n  ...\n  "hostports": [\n    "${NGROK_SUBDOMAIN}.ngrok.app:443"\n  ],\n  ...\n}\n')),(0,o.kt)("p",null,"Export the ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," value as a new environment variable named ",(0,o.kt)("inlineCode",{parentName:"p"},"NGROK_EDGE_ID"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export NGROK_EDGE_ID={your_id_here}\n")),(0,o.kt)("p",null,"Now that we have an edge, we can move onto the next step."),(0,o.kt)("h2",{id:"step-3--create-tunnel-group-backends"},(0,o.kt)("strong",{parentName:"h2"},"Step 3")," \u2014 Create Tunnel Group Backends"),(0,o.kt)("p",null,"Now that we have an edge we can begin to build the parts to do weighted load balancing."),(0,o.kt)("p",null,"Lets create two tunnel-group backends to do traffic management on our\nedge."),(0,o.kt)("h3",{id:"create-our-first-backend-with-label-regionus"},"Create our first backend with label ",(0,o.kt)("inlineCode",{parentName:"h3"},"region=us"),":"),(0,o.kt)(r.Z,{groupId:"guide",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"cli",label:"ngrok CLI",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'ngrok api backends tunnel-group create \\\n    --labels region=us \\\n    --description "us tunnel group"\n'))),(0,o.kt)(l.Z,{value:"curl",label:"CURL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n    -X POST https://api.ngrok.com/backends/tunnel_group \\\n    -H "Authorization: Bearer ${NGROK_API_KEY}" \\\n    -H "Content-Type: application/json" \\\n    -H "Ngrok-Version: 2" \\\n    -d @- <<BODY\n    {\n        "description": "us tunnel group",\n        "metadata": "{}",\n        "labels": {\n                "region": "us"\n        }\n    }\nBODY\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_API_KEY")," to your ngrok API key.")))),(0,o.kt)("p",null,"You will get something back like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "id":"bkdtg_2MT8j8IV1adEW9TbG5c9ypJwCHY",\n   ...\n}\n')),(0,o.kt)("p",null,"Export the returned ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," as a variable:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export NGROK_US_BACKEND_ID={your_id_here}\n")),(0,o.kt)("h3",{id:"create-our-second-backend-with-label-regioneu"},"Create our second backend with label ",(0,o.kt)("inlineCode",{parentName:"h3"},"region=eu"),":"),(0,o.kt)(r.Z,{groupId:"guide",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"cli",label:"ngrok CLI",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'ngrok api backends tunnel-group create \\\n    --labels region=eu \\\n    --description "eu tunnel group"\n'))),(0,o.kt)(l.Z,{value:"curl",label:"CURL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n    -X POST https://api.ngrok.com/backends/tunnel_group \\\n    -H "Authorization: Bearer ${NGROK_API_KEY}" \\\n    -H "Content-Type: application/json" \\\n    -H "Ngrok-Version: 2" \\\n    -d @- <<BODY\n    {\n        "description": "eu tunnel group",\n        "metadata": "{}",\n        "labels": {\n            "group": "eu"\n        }\n    }\nBODY\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_API_KEY")," to your ngrok API key.")))),(0,o.kt)("p",null,"You will get something back like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "id":"bkdtg_2MT8j8IV1adEW9TbG5c9ypJwCHY",\n   ...\n}\n')),(0,o.kt)("p",null,"Export the returned ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," as a variable:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export NGROK_EU_BACKEND_ID={your_id_here}\n")),(0,o.kt)("p",null,"Now that we have our tunnel-group backends, we can move onto the next step."),(0,o.kt)("h2",{id:"step-4---create-a-weighted-backend"},(0,o.kt)("strong",{parentName:"h2"},"Step 4")," - Create a Weighted Backend"),(0,o.kt)("p",null,"Now that we have our two region tunnel groups we need to create a weighted backend to distribute incoming traffic on our edge between them:"),(0,o.kt)(r.Z,{groupId:"guide",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"cli",label:"ngrok CLI",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'ngrok api backends weighted create \\\n    --description "weighted round-robin guide" \\\n  --backends "${NGROK_US_BACKEND_ID}=50" \\\n  --backends "${NGROK_EU_BACKEND_ID}=50"\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_US_BACKEND_ID")," to the id returned in step 3."),(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_EU_BACKEND_ID")," to the id returned in step 3."),(0,o.kt)("li",{parentName:"ul"},"\u2139\ufe0f Backend weights can be any valid integer between ",(0,o.kt)("inlineCode",{parentName:"li"},"0")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"10000")))),(0,o.kt)(l.Z,{value:"curl",label:"CURL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n    -X POST https://api.ngrok.com/backends/weighted \\\n    -H "Authorization: Bearer {NGROK_API_KEY}" \\\n    -H "Content-Type: application/json" \\\n    -H "Ngrok-Version: 2" \\\n    -d @- <<BODY\n    {\n        "description": "weighted round-robin guide",\n        "metadata": "{}",\n        "backends": {\n            "{NGROK_US_BACKEND_ID}": 50,\n            "{NGROK_EU_BACKEND_ID}": 50\n        }\n    }\nBODY\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_API_KEY")," to your ngrok API key."),(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_US_BACKEND_ID")," to the id returned in step 3."),(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_EU_BACKEND_ID")," to the id returned in step 3."),(0,o.kt)("li",{parentName:"ul"},"\u2139\ufe0f Backend weights can be any valid integer between ",(0,o.kt)("inlineCode",{parentName:"li"},"0")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"10000"))))),(0,o.kt)("p",null,"You should see the following output indicating we have created a new backend with our tunnel-groups weighted:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "id": "bkdwd_2MTK3Cp9rJ8CSDIy4K9blxYYEVH",\n   ...\n   "backends": {\n      "bkdtg_2MT8j8IV1adEW9TbG5c9ypJwCHY": 50,\n      "bkdtg_2MTDvvlnNPBcoj5LNJzWsc0TQIr": 50\n   }\n}\n')),(0,o.kt)("p",null,"Export the returned ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," as a variable:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export NGROK_BACKEND_ID={your_id_here}\n")),(0,o.kt)("p",null,"Now that we have the backend for our route, let's move on to the next step of creating our route."),(0,o.kt)("h2",{id:"step-5--create-a-catch-all-route"},(0,o.kt)("strong",{parentName:"h2"},"Step 5")," \u2014 Create a Catch-All Route"),(0,o.kt)("p",null,"Now that we have an edge and our backend, we need a way to route incoming traffic across\nour tunnels."),(0,o.kt)("p",null,"Let's create a catch-all route by using ",(0,o.kt)("inlineCode",{parentName:"p"},"path_prefix")," matching on the path ",(0,o.kt)("inlineCode",{parentName:"p"},"/")," that will handle all incoming traffic on our edge to our newly created backend:"),(0,o.kt)(r.Z,{groupId:"guide",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"cli",label:"ngrok CLI",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'ngrok api edges https-routes create ${NGROK_EDGE_ID} \\\n    --backend.backend-id ${NGROK_BACKEND_ID} \\\n    --match "/" \\\n    --match-type path_prefix\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_EDGE_ID")," to the id returned in step 2."),(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_BACKEND_ID")," to the id returned in step 4."))),(0,o.kt)(l.Z,{value:"curl",label:"CURL",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n    -X POST https://api.ngrok.com/edges/https/${NGROK_EDGE_ID}/routes \\\n    -H "Authorization: Bearer ${NGROK_API_KEY}" \\\n    -H "Content-Type: application/json" \\\n    -H "Ngrok-Version: 2" \\\n    -d @- <<BODY\n    {\n        "match_type":"path_prefix",\n        "match":"/",\n        "description":"",\n        "backend": {\n            "enabled": true,\n            "backend_id": "${NGROK_BACKEND_ID}"\n        },\n        "metadata":"{}"\n    }\nBODY\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_EDGE_ID")," to the id returned in step 2."),(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_API_KEY")," to your ngrok API key."),(0,o.kt)("li",{parentName:"ul"},"Replace or set ",(0,o.kt)("inlineCode",{parentName:"li"},"NGROK_BACKEND_ID")," to the id returned in step 4.")))),(0,o.kt)("p",null,"After running, you should get back a route with our edge and backend configured:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "edge_id":"edghts_2MT9nzunlKgQ0KRfmA5QK5iiI1J",\n   "id":"edghtsrt_2MTB6f41P74iHbyijXV4VCFcDKm",\n   ...\n   "backend":{\n      "enabled":true,\n      "backend":{\n         "id":"bkdwd_2MTK3Cp9rJ8CSDIy4K9blxYYEVH",\n         "uri":"https://api.ngrok.com/backends/tunnel_group/bkdwd_2MTK3Cp9rJ8CSDIy4K9blxYYEVH"\n      }\n   },\n   ...\n}\n')),(0,o.kt)("p",null,"Once you have followed the steps above, you can starting weighted load balanced tunnels on your ngrok Cloud Edge the next step."),(0,o.kt)("h2",{id:"step-5--starting-tunnels-on-your-ngrok-cloud-edge"},(0,o.kt)("strong",{parentName:"h2"},"Step 5")," \u2014 Starting tunnels on your ngrok Cloud Edge"),(0,o.kt)("p",null,"We have reached the point where we can now start to load balance our tunnels across the ngrok Cloud Edge by running ",(0,o.kt)("inlineCode",{parentName:"p"},"ngrok tunnel")," with our tunnel group labels."),(0,o.kt)("p",null,"Let's start by running a tunnel on the label ",(0,o.kt)("inlineCode",{parentName:"p"},"region=us")," with the region flag set to ",(0,o.kt)("inlineCode",{parentName:"p"},"us"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ngrok tunnel --region us --label region=us 80\n")),(0,o.kt)("p",null,"And start some tunnels on ",(0,o.kt)("inlineCode",{parentName:"p"},"region=eu")," with the region flag set to ",(0,o.kt)("inlineCode",{parentName:"p"},"eu"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ngrok tunnel --region eu --label region=eu 80\n")),(0,o.kt)("p",null,"Now any traffic that flows through ",(0,o.kt)("inlineCode",{parentName:"p"},"${NGROK_SUBDOMAIN}.ngrok.app")," will be distributed and round robin load balanced 50/50 across agents on both regions."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\ud83d\udcdd To create more agents in a region re-run the commands above in a new terminal or machine.")),(0,o.kt)("h2",{id:"conclusion"},"Conclusion"),(0,o.kt)("p",null,"In this tutorial we went over how to setup and create ngrok Cloud Edge tunnel groups and weighted backends with multiple tunnel groups applied to a Cloud Edge route to do weighted load balancing across tunnels in multiple agent regions."))}k.isMDXComponent=!0},11591:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/weighted-round-robin-load-balancing-3976759ac8f9e0546722c2431c8ad063.png"}}]);