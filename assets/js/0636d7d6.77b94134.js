"use strict";(self.webpackChunkngrok_doc=self.webpackChunkngrok_doc||[]).push([[45319],{79163:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>k,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=o(51163),r=(o(59496),o(49613));const a={title:"Docker"},i="Using ngrok with Docker",s={unversionedId:"using-ngrok-with/docker",id:"using-ngrok-with/docker",title:"Docker",description:"---",source:"@site/docs/using-ngrok-with/docker.md",sourceDirName:"using-ngrok-with",slug:"/using-ngrok-with/docker",permalink:"/docs/using-ngrok-with/docker",draft:!1,editUrl:"https://github.com/ngrok/ngrok-docs/edit/main/docs/using-ngrok-with/docker.md",tags:[],version:"current",lastUpdatedBy:"Russ Savage",lastUpdatedAt:1691862991,formattedLastUpdatedAt:"Aug 12, 2023",frontMatter:{title:"Docker"},sidebar:"docs",previous:{title:"Django",permalink:"/docs/using-ngrok-with/django"},next:{title:"Fast API",permalink:"/docs/using-ngrok-with/fastAPI"}},k={},c=[],l={toc:c},g="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(g,(0,n.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-ngrok-with-docker"},"Using ngrok with Docker"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"ngrok provides ",(0,r.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/ngrok/ngrok"},"pre-built docker images")," for the ngrok Agent with instructions for getting started. An example command for starting a tunnel to port 80 on the host machine looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --net=host -it -e NGROK_AUTHTOKEN=xyz ngrok/ngrok:latest http 80\n")),(0,r.kt)("p",null,"Note: the Docker version of ngrok follows the same convention as the agent, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -it -e NGROK_AUTHTOKEN=xyz ngrok/ngrok:latest http 80                            # secure public URL for port 80 web server\ndocker run -it -e NGROK_AUTHTOKEN=xyz ngrok/ngrok:latest http --domain=baz.ngrok.dev 8080   # port 8080 available at baz.ngrok.dev\ndocker run -it -e NGROK_AUTHTOKEN=xyz ngrok/ngrok:latest http foo.dev:80                    # tunnel to host:port instead of localhost\ndocker run -it -e NGROK_AUTHTOKEN=xyz ngrok/ngrok:latest http https://localhost:5001        # expose a local https server running on port 5001\ndocker run -it -e NGROK_AUTHTOKEN=xyz ngrok/ngrok:latest tcp 22                             # tunnel arbitrary TCP traffic to port 22\ndocker run -it -e NGROK_AUTHTOKEN=xyz ngrok/ngrok:latest tls --domain=foo.com 443           # TLS traffic for foo.com to port 443\ndocker run -it -e NGROK_AUTHTOKEN=xyz ngrok/ngrok:latest start foo bar baz                  # start tunnels from the configuration file\n")),(0,r.kt)("p",null,"Note: for MacOS or Windows users, the ",(0,r.kt)("inlineCode",{parentName:"p"},"--net=host")," option will not work. You will need to use the special url ",(0,r.kt)("inlineCode",{parentName:"p"},"host.docker.internal")," as described in the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/desktop/mac/networking/#use-cases-and-workarounds"},"Docker networking documentation"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -it -e NGROK_AUTHTOKEN=xyz ngrok/ngrok:latest http host.docker.internal:80\n")),(0,r.kt)("h1",{id:"using-ngrok-with-docker-compose"},"Using ngrok with Docker Compose"),(0,r.kt)("hr",null),(0,r.kt)("p",null,"If you're more comfortable using Docker Compose, you can use the following as a starting point. Copy the contents below into a new file named ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml"),", then run ",(0,r.kt)("inlineCode",{parentName:"p"},"docker compose up")," in that directory. This Docker compose file assumes that you have an ",(0,r.kt)("inlineCode",{parentName:"p"},"ngrok.yml")," file in the same directory with at least one tunnel defined. Check out the ",(0,r.kt)("a",{parentName:"p",href:"/docs/secure-tunnels/ngrok-agent/reference/config/"},"ngrok agent config file documentation")," for help creating a configuration file with a tunnel definition. If you want to use the same configuration file as your local ngrok agent, you can view the location of the default config file using ",(0,r.kt)("inlineCode",{parentName:"p"},"ngrok config check"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'services:\n    ngrok:\n        image: ngrok/ngrok:latest\n        restart: unless-stopped\n        command:\n          - "start"\n          - "--all"\n          - "--config"\n          - "/etc/ngrok.yml"\n        volumes:\n          - ./ngrok.yml:/etc/ngrok.yml\n        ports:\n          - 4040:4040\n')))}d.isMDXComponent=!0}}]);