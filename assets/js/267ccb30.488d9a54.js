"use strict";(self.webpackChunkngrok_doc=self.webpackChunkngrok_doc||[]).push([[55521],{20994:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=t(51163),a=(t(59496),t(49613));const o={},s="Compression",l={unversionedId:"cloud-edge/modules/compression",id:"cloud-edge/modules/compression",title:"Compression",description:"---",source:"@site/docs/cloud-edge/modules/compression.md",sourceDirName:"cloud-edge/modules",slug:"/cloud-edge/modules/compression",permalink:"/docs/cloud-edge/modules/compression",draft:!1,editUrl:"https://github.com/ngrok/ngrok-docs/edit/main/docs/cloud-edge/modules/compression.md",tags:[],version:"current",lastUpdatedBy:"Alan Shreve",lastUpdatedAt:1692208556,formattedLastUpdatedAt:"Aug 16, 2023",frontMatter:{},sidebar:"docs",previous:{title:"Circuit Breaker",permalink:"/docs/cloud-edge/modules/circuit-breaker"},next:{title:"IP Restrictions",permalink:"/docs/cloud-edge/modules/ip-restrictions"}},i={},d=[{value:"Overview",id:"overview",level:2},{value:"Quickstart",id:"quickstart",level:2},{value:"Agent CLI",id:"agent-cli",level:3},{value:"Agent Configuration File",id:"agent-configuration-file",level:3},{value:"SSH",id:"ssh",level:3},{value:"Go SDK",id:"go-sdk",level:3},{value:"Rust SDK",id:"rust-sdk",level:3},{value:"Kubernetes Ingress Controller",id:"kubernetes-ingress-controller",level:3},{value:"Edges",id:"edges",level:3},{value:"Behavior",id:"behavior",level:2},{value:"Streaming Compression",id:"streaming-compression",level:3},{value:"Algorithm Choice",id:"algorithm-choice",level:3},{value:"Response Headers",id:"response-headers",level:3},{value:"Compression Level",id:"compression-level",level:3},{value:"Reference",id:"reference",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Upstream Headers",id:"upstream-headers",level:3},{value:"Errors",id:"errors",level:3},{value:"Events",id:"events",level:3},{value:"Limits",id:"limits",level:3},{value:"Try it out",id:"try-it-out",level:2}],p={toc:d},u="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"compression"},"Compression"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"This module improves the performance of your web applications by compressing\nHTTP response bodies returned by your upstream application."),(0,a.kt)("p",null,"If an HTTP request includes an ",(0,a.kt)("inlineCode",{parentName:"p"},"Accept-Encoding")," header, HTTP responses will be\nautomatically compressed and a ",(0,a.kt)("inlineCode",{parentName:"p"},"Content-Encoding")," response header will be\nadded. If the response was already compressed by your upstream application,\nngrok takes no action."),(0,a.kt)("h2",{id:"quickstart"},"Quickstart"),(0,a.kt)("h3",{id:"agent-cli"},"Agent CLI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ngrok http 80 --compression\n")),(0,a.kt)("h3",{id:"agent-configuration-file"},"Agent Configuration File"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"tunnels:\n  example:\n    proto: http\n    addr: 80\n    compression: true\n")),(0,a.kt)("h3",{id:"ssh"},"SSH"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh -R 443:localhost:80 connect.ngrok-agent.com http --compression\n")),(0,a.kt)("h3",{id:"go-sdk"},"Go SDK"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "context"\n    "net"\n\n    "golang.ngrok.com/ngrok"\n    "golang.ngrok.com/ngrok/config"\n)\n\nfunc listenCompressed(ctx context.Context) net.Listener {\n    listener, _ := ngrok.Listen(ctx,\n        config.HTTPEndpoint(\n            config.WithCompression(),\n        ),\n        ngrok.WithAuthtokenFromEnv(),\n    )\n\n    return listener\n}\n')),(0,a.kt)("h3",{id:"rust-sdk"},"Rust SDK"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use ngrok::prelude::*;\n\nasync fn start_tunnel() -> anyhow::Result<impl Tunnel> {\n    let sess = ngrok::Session::builder()\n        .authtoken_from_env()\n        .connect()\n        .await?;\n\n    let tun = sess\n        .http_endpoint()\n        .compression()\n        .listen()\n        .await?;\n\n    println!("Listening on URL: {:?}", tun.url());\n\n    Ok(tun)\n}\n')),(0,a.kt)("h3",{id:"kubernetes-ingress-controller"},"Kubernetes Ingress Controller"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"kind: NgrokModuleSet\napiVersion: ingress.k8s.ngrok.com/v1alpha1\nmetadata:\n  name: ngrok-module-set\nmodules:\n  compression:\n    enabled: true\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: example-ingress\n  annotations:\n    k8s.ngrok.com/modules: ngrok-module-set\nspec:\n  ingressClassName: ngrok\n  rules:\n    - host: your-domain.ngrok.app\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: example-service\n                port:\n                  number: 80\n")),(0,a.kt)("h3",{id:"edges"},"Edges"),(0,a.kt)("p",null,"Compression is a supported Edge module. Unlike most edge modules, Compression\nhas no configuration parameters. It is either enabled or disabled."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/resources/https-edge-route-compression-module/"},"Compression Edge Module API Resource"))),(0,a.kt)("h2",{id:"behavior"},"Behavior"),(0,a.kt)("h3",{id:"streaming-compression"},"Streaming Compression"),(0,a.kt)("p",null,"When ngrok performs compression, the response body is not buffered; the\nresponse body is compressed as it is streamed through the ngrok edge."),(0,a.kt)("h3",{id:"algorithm-choice"},"Algorithm Choice"),(0,a.kt)("p",null,"If a request specifies ",(0,a.kt)("inlineCode",{parentName:"p"},"Accept-Encoding")," but no requested values are supported,\nngrok takes no action and the upstream response is returned without\nmodification."),(0,a.kt)("p",null,"ngrok negotiates the encoding type as defined by the RFC for ",(0,a.kt)("inlineCode",{parentName:"p"},"Accept-Encoding"),".\nIt respects q-values and chooses the ",(0,a.kt)("inlineCode",{parentName:"p"},"Accept-Encoding")," supported algorithm with\nthe highest q-value."),(0,a.kt)("p",null,"ngrok supports the following compression algorithms in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Accept-Encoding"),"\nheader."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Algorithm"),(0,a.kt)("th",{parentName:"tr",align:null},"Supported"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"br")),(0,a.kt)("td",{parentName:"tr",align:null},"no")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"compress")),(0,a.kt)("td",{parentName:"tr",align:null},"no")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"deflate")),(0,a.kt)("td",{parentName:"tr",align:null},"yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"gzip")),(0,a.kt)("td",{parentName:"tr",align:null},"yes")))),(0,a.kt)("h3",{id:"response-headers"},"Response Headers"),(0,a.kt)("p",null,"When ngrok performs compression, the following changes are made to\nthe HTTP response header:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"Content-Length")," header is removed"),(0,a.kt)("li",{parentName:"ul"},"A ",(0,a.kt)("inlineCode",{parentName:"li"},"Content-Encoding")," header is added with the negotiated algorithm"),(0,a.kt)("li",{parentName:"ul"},"A ",(0,a.kt)("inlineCode",{parentName:"li"},"Vary: Accept-Encoding")," header is added")),(0,a.kt)("h3",{id:"compression-level"},"Compression Level"),(0,a.kt)("p",null,"The compression level is a value which indicates whether the compression\nalgorithm should prefer to save more space at the expense of being slower and\nusing more compute. This value is not currently configurable. ngrok\nautomatically chooses a value that provides a reasonable tradeoff."),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"This module does not support any configuration. It is either enabled or\ndisabled."),(0,a.kt)("h3",{id:"upstream-headers"},"Upstream Headers"),(0,a.kt)("p",null,"This module does not add any upstream headers."),(0,a.kt)("h3",{id:"errors"},"Errors"),(0,a.kt)("p",null,"This module does not return any errors."),(0,a.kt)("h3",{id:"events"},"Events"),(0,a.kt)("p",null,"When this module is enabled, it populates the following fields in\n",(0,a.kt)("a",{parentName:"p",href:"/events/reference/#http-request-complete"},"http_request_complete.v0")," events."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Fields"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"compression.algorithm"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"compression.bytes_saved"))))),(0,a.kt)("h3",{id:"limits"},"Limits"),(0,a.kt)("p",null,"This module is available on all plans."),(0,a.kt)("h2",{id:"try-it-out"},"Try it out"),(0,a.kt)("p",null,"For testing purposes, create a directory with a file in it and then enter that\ndirectory."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'mkdir test-dir\ncd test-dir\necho "hello world" > t.txt\n')),(0,a.kt)("p",null,"ngrok can serve files from any directory (just like Python's Simple HTTP\nServer) by forwarding to a ",(0,a.kt)("inlineCode",{parentName:"p"},"file://")," URL. We're going to use that capability\nfor our compression testing."),(0,a.kt)("p",null,"First let's see what this looks like without using compression by running the\nfollowing in your ",(0,a.kt)("inlineCode",{parentName:"p"},"test-dir")," directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ngrok http file://`pwd` --domain your-domain.ngrok.app\n")),(0,a.kt)("p",null,"Then in another terminal while ngrok is still running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl --compressed -D - https://your-domain.ngrok.app/\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--compressed")," instructs curl to set the ",(0,a.kt)("inlineCode",{parentName:"li"},"Accept-Encoding")," header to request\ncompressed content"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-D -")," instructs curl to show the HTTP response headers")),(0,a.kt)("p",null,"You should get a response that looks like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},'HTTP/2 200\ncontent-type: text/html; charset=utf-8\ndate: Tue, 18 Jul 2023 09:52:49 GMT\nlast-modified: Tue, 18 Jul 2023 09:52:34 GMT\nngrok-agent-ips: 71.227.75.230\nngrok-trace-id: 24e925dd0f348c1040d7ff62b06606cd\ncontent-length: 39\n\n<pre>\n<a href="t.txt">t.txt</a>\n</pre>\n')),(0,a.kt)("p",null,"Now let's try it again with compression. Stop your ngrok agent and restart it\nby changing the command to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ngrok http file://`pwd` --domain your-domain.ngrok.app --compression\n")),(0,a.kt)("p",null,"Rerun the same curl command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl --compressed -D - https://your-domain.ngrok.app/\n")),(0,a.kt)("p",null,"This time you should see that HTTP response headers include ",(0,a.kt)("inlineCode",{parentName:"p"},"content-encoding:\ndeflate")," indicating that the response was compressed."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},'HTTP/2 200\ncontent-encoding: deflate\ncontent-type: text/html; charset=utf-8\ndate: Tue, 18 Jul 2023 10:03:22 GMT\nlast-modified: Tue, 18 Jul 2023 09:52:34 GMT\nngrok-agent-ips: 71.227.75.230\nngrok-trace-id: b6b6cdce029e94123188ce53c0febee4\nvary: Accept-Encoding\n\n<pre>\n<a href="t.txt">t.txt</a>\n</pre>\n')))}m.isMDXComponent=!0}}]);