"use strict";(self.webpackChunkngrok_doc=self.webpackChunkngrok_doc||[]).push([[72478],{84597:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>g,contentTitle:()=>i,default:()=>k,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=t(51163),a=(t(59496),t(49613));const r={title:"Go"},i="Using ngrok with the ngrok-go Library",l={unversionedId:"using-ngrok-with/go",id:"using-ngrok-with/go",title:"Go",description:"---",source:"@site/docs/using-ngrok-with/go.md",sourceDirName:"using-ngrok-with",slug:"/using-ngrok-with/go",permalink:"/docs/using-ngrok-with/go",draft:!1,editUrl:"https://github.com/ngrok/ngrok-docs/edit/main/docs/using-ngrok-with/go.md",tags:[],version:"current",lastUpdatedBy:"Russ Savage",lastUpdatedAt:1693002758,formattedLastUpdatedAt:"Aug 25, 2023",frontMatter:{title:"Go"},sidebar:"docs",previous:{title:"gRPC",permalink:"/docs/using-ngrok-with/gRPC"},next:{title:"Google Colab",permalink:"/docs/using-ngrok-with/googleColab"}},g={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Get started with ngrok-go",id:"get-started-with-ngrok-go",level:2},{value:"Add edge functionality to your app",id:"add-edge-functionality-to-your-app",level:2}],p={toc:s},u="wrapper";function k(n){let{components:e,...r}=n;return(0,a.kt)(u,(0,o.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"using-ngrok-with-the-ngrok-go-library"},"Using ngrok with the ngrok-go Library"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"ngrok-go is an idiomatic Go package for embedding secure ingress directly into your Go applications. If you\u2019ve used the ngrok agent before, you can think of ngrok-go as the agent packaged as a Go library. ",(0,a.kt)("a",{parentName:"p",href:"http://github.com/ngrok/ngrok-go"},"ngrok-go is open source")," and the ",(0,a.kt)("a",{parentName:"p",href:"https://pkg.go.dev/golang.ngrok.com/ngrok"},"API reference documentation is available on go.pkg.dev"),"."),(0,a.kt)("p",null,"ngrok-go lets developers serve Go applications on the internet in a single line of code without requiring VPC routing, load balancers, certificates, or even ports. Applications using ngrok-go can leverage ngrok\u2019s global network through the same ",(0,a.kt)("inlineCode",{parentName:"p"},"net.Listener")," interface and ",(0,a.kt)("inlineCode",{parentName:"p"},"net.Listen()")," code, making it incredibly simple to add into any existing application."),(0,a.kt)("p",null,"In this tutorial, you we build a Go App with ingress access and security provided by ngrok."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),": This tutorial assumes you have Go already installed."),(0,a.kt)("h2",{id:"get-started-with-ngrok-go"},"Get started with ngrok-go"),(0,a.kt)("p",null,"Getting started with ngrok and the ngrok-go library is simple:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"To start, ",(0,a.kt)("a",{parentName:"p",href:"https://ngrok.com/signup"},"sign up for ngrok"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In the ",(0,a.kt)("a",{parentName:"p",href:"https://dashboard.ngrok.com"},"ngrok Dashboard"),", copy your Authtoken")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Launch a terminal and create a go app and file:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir hello-ngrok\ncd hello-ngrok\ngo mod init hello-ngrok\ngo get golang.ngrok.com/ngrok\ntouch main.go\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Edit the main.go file and add the following code:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:"showLineNumbers",showLineNumbers:!0},'package main\n\nimport (\n    "context"\n    "fmt"\n    "log"\n    "net/http"\n\n    "golang.ngrok.com/ngrok"\n    "golang.ngrok.com/ngrok/config"\n)\n\nfunc main() {\n    if err := run(context.Background()); err != nil {\n        log.Fatal(err)\n    }\n}\n\nfunc run(ctx context.Context) error {\n    // highlight-start\n    tun, err := ngrok.Listen(ctx,\n        config.HTTPEndpoint(),\n        ngrok.WithAuthtokenFromEnv(),\n    )\n    // highlight-end\n    if err != nil {\n        return err\n    }\n\n    log.Println("tunnel created:", tun.URL())\n\n    return http.Serve(tun, http.HandlerFunc(handler))\n}\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n    // highlight-next-line\n    fmt.Fprintln(w, "<h1>Hello from ngrok-go.</h1>")\n}\n')))),(0,a.kt)("admonition",{title:"In this code:",type:"note"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Lines 20-23"),": start the ngrok tunnel with a preset configuration"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Line 22"),": fetch your the ngrok auth token from your environment variable"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Line 34"),": serve a static page with a hello."))),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Save and close the file")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Launch your tunnel replacing ",(0,a.kt)("inlineCode",{parentName:"p"},"TOKEN")," with your Authtoken from above:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'NGROK_AUTHTOKEN="TOKEN" go run main.go\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"The terminal will display an ngrok URL."),(0,a.kt)("p",{parentName:"li"},"Access it to confirm you see the message ",(0,a.kt)("inlineCode",{parentName:"p"},"Hello from ngrok-go"),".\nYour Go application is now live on the internet, with a public url that anyone in the world can access."))),(0,a.kt)("h2",{id:"add-edge-functionality-to-your-app"},"Add edge functionality to your app"),(0,a.kt)("p",null,"The ngrok-go library provides functions and configuration for all features available in ngrok. Everything you can do with the ngrok agent is available using our library. In this example, you can modify main.go to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Line 22"),": Use Google\u2019s OAuth for authentication"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Line 23"),": Restrict access only for users from a specific email (i.e. to grant access only to users with gmail, replace ",(0,a.kt)("inlineCode",{parentName:"li"},"YOUR EMAIL DOMAIN")," with ",(0,a.kt)("inlineCode",{parentName:"li"},"gmail.com"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Line 24"),": Use my-domain.ngrok.dev as a custom subdomain"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Line 25"),": Upon a successful authentication, send the user email in the email header"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Line 39"),": Print the email header.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go",metastring:"showLineNumbers",showLineNumbers:!0},'package main\n\nimport (\n    "context"\n    "fmt"\n    "log"\n    "net/http"\n\n    "golang.ngrok.com/ngrok"\n    "golang.ngrok.com/ngrok/config"\n)\n\nfunc main() {\n    if err := run(context.Background()); err != nil {\n        log.Fatal(err)\n    }\n}\n\nfunc run(ctx context.Context) error {\n    tun, err := ngrok.Listen(ctx,\n        config.HTTPEndpoint(\n            // highlight-start\n            config.WithOAuth("google",\n                              config.WithAllowOAuthDomain("YOUR EMAIL DOMAIN"), ),\n            config.WithDomain("my-domain.ngrok.dev"),\n            config.WithRequestHeader("email", "${.oauth.user.email}"),\n            // highlight-end\n        ),\n        ngrok.WithAuthtokenFromEnv(),\n    )\n    if err != nil {\n        return err\n    }\n\n    log.Println("tunnel created:", tun.URL())\n\n    return http.Serve(tun, http.HandlerFunc(handler))\n}\n\nfunc handler(w http.ResponseWriter, r *http.Request) {\n    // highlight-next-line\n    fmt.Fprintln(w, "<h1>Hello from ngrok-go, ", r.Header.Values("email"), ".</h1>")\n}\n')),(0,a.kt)("p",null,"And we run the app just as we did before, again replacing TOKEN with our Authtoken:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'NGROK_AUTHTOKEN="TOKEN" go run main.go\n')),(0,a.kt)("p",null,"And this is our result:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"ngrok go in action",src:t(54769).Z,width:"960",height:"540"})))}k.isMDXComponent=!0},54769:(n,e,t)=>{t.d(e,{Z:()=>o});const o=t.p+"assets/images/ngrok-go-small-2f1d80b9bbe4aef22d3d3a291da8d2a7.gif"}}]);