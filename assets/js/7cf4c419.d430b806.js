"use strict";(self.webpackChunkngrok_doc=self.webpackChunkngrok_doc||[]).push([[67402],{51370:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>D,contentTitle:()=>z,default:()=>E,frontMatter:()=>I,metadata:()=>O,toc:()=>B});var n=a(51163),i=(a(59496),a(49613));const r={toc:[{value:"Example Request",id:"example-request",level:4}]},l="wrapper";function s(t){let{components:e,...a}=t;return(0,i.kt)(l,(0,n.Z)({},r,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"example-request"},"Example Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n-X POST \\\n-H "Authorization: Bearer {API_KEY}" \\\n-H "Content-Type: application/json" \\\n-H "Ngrok-Version: 2" \\\n-d \'{"ssh_certificate_authority_id":"sshca_2TMGJ6loFb2szEAbmq4alsurdyt","public_key":"ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBK58lFzmWlDimDtBz78wVT4oauA8PjY0CiXTCEIsBNC6UwOJvZ0jdSaYNhDaa7dRV84DfBb/gKzqlXC7cVMZjl0= alan@work-laptop","principals":["ec2-user","root"],"valid_until":"2023-10-29T23:17:40Z","description":"temporary access to staging machine"}\' \\\nhttps://api.ngrok.com/ssh_user_certificates\n')))}s.isMDXComponent=!0;const d={toc:[{value:"Example Response",id:"example-response",level:4}]},p="wrapper";function o(t){let{components:e,...a}=t;return(0,i.kt)(p,(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"example-response"},"Example Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5",\n    "uri": "https://api.ngrok.com/ssh_user_certificates/sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5",\n    "created_at": "2023-07-31T23:17:40Z",\n    "description": "temporary access to staging machine",\n    "public_key": "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBK58lFzmWlDimDtBz78wVT4oauA8PjY0CiXTCEIsBNC6UwOJvZ0jdSaYNhDaa7dRV84DfBb/gKzqlXC7cVMZjl0= alan@work-laptop",\n    "key_type": "ecdsa",\n    "ssh_certificate_authority_id": "sshca_2TMGJ6loFb2szEAbmq4alsurdyt",\n    "principals": ["ec2-user", "root"],\n    "critical_options": {},\n    "extensions": {\n        "permit-pty": "",\n        "permit-user-rc": ""\n    },\n    "valid_after": "2023-07-31T23:17:40Z",\n    "valid_until": "2023-10-29T23:17:40Z",\n    "certificate": "ecdsa-sha2-nistp256-cert-v01@openssh.com AAAAKGVjZHNhLXNoYTItbmlzdHAyNTYtY2VydC12MDFAb3BlbnNzaC5jb20AAAAgE1tRjInCcfBXzvt1JIyIa+lthl06eDrhw8K2IP+BdNsAAAAIbmlzdHAyNTYAAABBBK58lFzmWlDimDtBz78wVT4oauA8PjY0CiXTCEIsBNC6UwOJvZ0jdSaYNhDaa7dRV84DfBb/gKzqlXC7cVMZjl0AAAAAAAAAAAAAAAEAAAAhc3VjcnRfMlRNR0l6SDI0Q1J3MGQ3SEhxVUhiOUtPM2k1AAAAFAAAAAhlYzItdXNlcgAAAARyb290AAAAAGTIQRQAAAAAZT7oFAAAAAAAAAAoAAAACnBlcm1pdC1wdHkAAAAAAAAADnBlcm1pdC11c2VyLXJjAAAAAAAAAAAAAAAzAAAAC3NzaC1lZDI1NTE5AAAAIMTULg6WcNwg3Z8ma5/hslN+69DExLDFuNKW/wJNvH/yAAAAUwAAAAtzc2gtZWQyNTUxOQAAAEBRqPLiFr0/U0Q8Zqot/gmi2ym0sBP2Yi6s7PTi9PRFggqhGJVvvYMtf5kECp1x7SYijKxkfUcB/7f/9O4IoHcM sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5"\n}\n')))}o.isMDXComponent=!0;const c={toc:[{value:"Example Request",id:"example-request",level:4}]},m="wrapper";function u(t){let{components:e,...a}=t;return(0,i.kt)(m,(0,n.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"example-request"},"Example Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n-X DELETE \\\n-H "Authorization: Bearer {API_KEY}" \\\n-H "Ngrok-Version: 2" \\\nhttps://api.ngrok.com/ssh_user_certificates/sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5\n')))}u.isMDXComponent=!0;const k={toc:[{value:"Example Request",id:"example-request",level:4}]},h="wrapper";function A(t){let{components:e,...a}=t;return(0,i.kt)(h,(0,n.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"example-request"},"Example Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n-X GET \\\n-H "Authorization: Bearer {API_KEY}" \\\n-H "Ngrok-Version: 2" \\\nhttps://api.ngrok.com/ssh_user_certificates/sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5\n')))}A.isMDXComponent=!0;const N={toc:[{value:"Example Response",id:"example-response",level:4}]},g="wrapper";function f(t){let{components:e,...a}=t;return(0,i.kt)(g,(0,n.Z)({},N,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"example-response"},"Example Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5",\n    "uri": "https://api.ngrok.com/ssh_user_certificates/sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5",\n    "created_at": "2023-07-31T23:17:40Z",\n    "description": "temporary access to staging machine for alan",\n    "metadata": "{\\"user_email\\": \\"alan@example.com\\"}",\n    "public_key": "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBK58lFzmWlDimDtBz78wVT4oauA8PjY0CiXTCEIsBNC6UwOJvZ0jdSaYNhDaa7dRV84DfBb/gKzqlXC7cVMZjl0= alan@work-laptop",\n    "key_type": "ecdsa",\n    "ssh_certificate_authority_id": "sshca_2TMGJ6loFb2szEAbmq4alsurdyt",\n    "principals": ["ec2-user", "root"],\n    "critical_options": {},\n    "extensions": {\n        "permit-pty": "",\n        "permit-user-rc": ""\n    },\n    "valid_after": "2023-07-31T23:17:40Z",\n    "valid_until": "2023-10-29T23:17:40Z",\n    "certificate": "ecdsa-sha2-nistp256-cert-v01@openssh.com AAAAKGVjZHNhLXNoYTItbmlzdHAyNTYtY2VydC12MDFAb3BlbnNzaC5jb20AAAAgE1tRjInCcfBXzvt1JIyIa+lthl06eDrhw8K2IP+BdNsAAAAIbmlzdHAyNTYAAABBBK58lFzmWlDimDtBz78wVT4oauA8PjY0CiXTCEIsBNC6UwOJvZ0jdSaYNhDaa7dRV84DfBb/gKzqlXC7cVMZjl0AAAAAAAAAAAAAAAEAAAAhc3VjcnRfMlRNR0l6SDI0Q1J3MGQ3SEhxVUhiOUtPM2k1AAAAFAAAAAhlYzItdXNlcgAAAARyb290AAAAAGTIQRQAAAAAZT7oFAAAAAAAAAAoAAAACnBlcm1pdC1wdHkAAAAAAAAADnBlcm1pdC11c2VyLXJjAAAAAAAAAAAAAAAzAAAAC3NzaC1lZDI1NTE5AAAAIMTULg6WcNwg3Z8ma5/hslN+69DExLDFuNKW/wJNvH/yAAAAUwAAAAtzc2gtZWQyNTUxOQAAAEBRqPLiFr0/U0Q8Zqot/gmi2ym0sBP2Yi6s7PTi9PRFggqhGJVvvYMtf5kECp1x7SYijKxkfUcB/7f/9O4IoHcM sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5"\n}\n')))}f.isMDXComponent=!0;const y={toc:[{value:"Example Request",id:"example-request",level:4}]},b="wrapper";function C(t){let{components:e,...a}=t;return(0,i.kt)(b,(0,n.Z)({},y,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"example-request"},"Example Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n-X GET \\\n-H "Authorization: Bearer {API_KEY}" \\\n-H "Ngrok-Version: 2" \\\nhttps://api.ngrok.com/ssh_user_certificates\n')))}C.isMDXComponent=!0;const S={toc:[{value:"Example Response",id:"example-response",level:4}]},H="wrapper";function _(t){let{components:e,...a}=t;return(0,i.kt)(H,(0,n.Z)({},S,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"example-response"},"Example Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "ssh_user_certificates": [\n        {\n            "id": "sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5",\n            "uri": "https://api.ngrok.com/ssh_user_certificates/sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5",\n            "created_at": "2023-07-31T23:17:40Z",\n            "description": "temporary access to staging machine",\n            "public_key": "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBK58lFzmWlDimDtBz78wVT4oauA8PjY0CiXTCEIsBNC6UwOJvZ0jdSaYNhDaa7dRV84DfBb/gKzqlXC7cVMZjl0= alan@work-laptop",\n            "key_type": "ecdsa",\n            "ssh_certificate_authority_id": "sshca_2TMGJ6loFb2szEAbmq4alsurdyt",\n            "principals": ["ec2-user", "root"],\n            "critical_options": {},\n            "extensions": {\n                "permit-pty": "",\n                "permit-user-rc": ""\n            },\n            "valid_after": "2023-07-31T23:17:40Z",\n            "valid_until": "2023-10-29T23:17:40Z",\n            "certificate": "ecdsa-sha2-nistp256-cert-v01@openssh.com AAAAKGVjZHNhLXNoYTItbmlzdHAyNTYtY2VydC12MDFAb3BlbnNzaC5jb20AAAAgE1tRjInCcfBXzvt1JIyIa+lthl06eDrhw8K2IP+BdNsAAAAIbmlzdHAyNTYAAABBBK58lFzmWlDimDtBz78wVT4oauA8PjY0CiXTCEIsBNC6UwOJvZ0jdSaYNhDaa7dRV84DfBb/gKzqlXC7cVMZjl0AAAAAAAAAAAAAAAEAAAAhc3VjcnRfMlRNR0l6SDI0Q1J3MGQ3SEhxVUhiOUtPM2k1AAAAFAAAAAhlYzItdXNlcgAAAARyb290AAAAAGTIQRQAAAAAZT7oFAAAAAAAAAAoAAAACnBlcm1pdC1wdHkAAAAAAAAADnBlcm1pdC11c2VyLXJjAAAAAAAAAAAAAAAzAAAAC3NzaC1lZDI1NTE5AAAAIMTULg6WcNwg3Z8ma5/hslN+69DExLDFuNKW/wJNvH/yAAAAUwAAAAtzc2gtZWQyNTUxOQAAAEBRqPLiFr0/U0Q8Zqot/gmi2ym0sBP2Yi6s7PTi9PRFggqhGJVvvYMtf5kECp1x7SYijKxkfUcB/7f/9O4IoHcM sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5"\n        }\n    ],\n    "uri": "https://api.ngrok.com/ssh_user_certificates",\n    "next_page_uri": null\n}\n')))}_.isMDXComponent=!0;const T={toc:[{value:"Example Request",id:"example-request",level:4}]},v="wrapper";function R(t){let{components:e,...a}=t;return(0,i.kt)(v,(0,n.Z)({},T,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"example-request"},"Example Request"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n-X PATCH \\\n-H "Authorization: Bearer {API_KEY}" \\\n-H "Content-Type: application/json" \\\n-H "Ngrok-Version: 2" \\\n-d \'{"description":"temporary access to staging machine for alan","metadata":"{\\"user_email\\": \\"alan@example.com\\"}"}\' \\\nhttps://api.ngrok.com/ssh_user_certificates/sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5\n')))}R.isMDXComponent=!0;const x={toc:[{value:"Example Response",id:"example-response",level:4}]},w="wrapper";function U(t){let{components:e,...a}=t;return(0,i.kt)(w,(0,n.Z)({},x,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"example-response"},"Example Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5",\n    "uri": "https://api.ngrok.com/ssh_user_certificates/sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5",\n    "created_at": "2023-07-31T23:17:40Z",\n    "description": "temporary access to staging machine for alan",\n    "metadata": "{\\"user_email\\": \\"alan@example.com\\"}",\n    "public_key": "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBK58lFzmWlDimDtBz78wVT4oauA8PjY0CiXTCEIsBNC6UwOJvZ0jdSaYNhDaa7dRV84DfBb/gKzqlXC7cVMZjl0= alan@work-laptop",\n    "key_type": "ecdsa",\n    "ssh_certificate_authority_id": "sshca_2TMGJ6loFb2szEAbmq4alsurdyt",\n    "principals": ["ec2-user", "root"],\n    "critical_options": {},\n    "extensions": {\n        "permit-pty": "",\n        "permit-user-rc": ""\n    },\n    "valid_after": "2023-07-31T23:17:40Z",\n    "valid_until": "2023-10-29T23:17:40Z",\n    "certificate": "ecdsa-sha2-nistp256-cert-v01@openssh.com AAAAKGVjZHNhLXNoYTItbmlzdHAyNTYtY2VydC12MDFAb3BlbnNzaC5jb20AAAAgE1tRjInCcfBXzvt1JIyIa+lthl06eDrhw8K2IP+BdNsAAAAIbmlzdHAyNTYAAABBBK58lFzmWlDimDtBz78wVT4oauA8PjY0CiXTCEIsBNC6UwOJvZ0jdSaYNhDaa7dRV84DfBb/gKzqlXC7cVMZjl0AAAAAAAAAAAAAAAEAAAAhc3VjcnRfMlRNR0l6SDI0Q1J3MGQ3SEhxVUhiOUtPM2k1AAAAFAAAAAhlYzItdXNlcgAAAARyb290AAAAAGTIQRQAAAAAZT7oFAAAAAAAAAAoAAAACnBlcm1pdC1wdHkAAAAAAAAADnBlcm1pdC11c2VyLXJjAAAAAAAAAAAAAAAzAAAAC3NzaC1lZDI1NTE5AAAAIMTULg6WcNwg3Z8ma5/hslN+69DExLDFuNKW/wJNvH/yAAAAUwAAAAtzc2gtZWQyNTUxOQAAAEBRqPLiFr0/U0Q8Zqot/gmi2ym0sBP2Yi6s7PTi9PRFggqhGJVvvYMtf5kECp1x7SYijKxkfUcB/7f/9O4IoHcM sucrt_2TMGIzH24CRw0d7HHqUHb9KO3i5"\n}\n')))}U.isMDXComponent=!0;const I={},z="SSH User Certificates",O={unversionedId:"api/resources/ssh-user-certificates",id:"api/resources/ssh-user-certificates",title:"SSH User Certificates",description:"---",source:"@site/docs/api/resources/ssh-user-certificates.mdx",sourceDirName:"api/resources",slug:"/api/resources/ssh-user-certificates",permalink:"/docs/api/resources/ssh-user-certificates",draft:!1,editUrl:"https://github.com/ngrok/ngrok-docs/edit/main/docs/api/resources/ssh-user-certificates.mdx",tags:[],version:"current",lastUpdatedBy:"Russ Savage",lastUpdatedAt:1691862991,formattedLastUpdatedAt:"Aug 12, 2023",frontMatter:{},sidebar:"docs",previous:{title:"SSH Host Certificates",permalink:"/docs/api/resources/ssh-host-certificates"},next:{title:"TLS Certificates",permalink:"/docs/api/resources/tls-certificates"}},D={},B=[{value:"Create SSH User Certificate",id:"create-ssh-user-certificate",level:2},{value:"Request",id:"request",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Response",id:"response",level:3},{value:"Fields",id:"fields",level:4},{value:"Delete SSH User Certificate",id:"delete-ssh-user-certificate",level:2},{value:"Request",id:"request-1",level:3},{value:"Response",id:"response-1",level:3},{value:"Get SSH User Certificate",id:"get-ssh-user-certificate",level:2},{value:"Request",id:"request-2",level:3},{value:"Response",id:"response-2",level:3},{value:"Fields",id:"fields-1",level:4},{value:"List SSH User Certificates",id:"list-ssh-user-certificates",level:2},{value:"Request",id:"request-3",level:3},{value:"Response",id:"response-3",level:3},{value:"Fields",id:"fields-2",level:4},{value:"SSHUserCertificate fields",id:"sshusercertificate-fields",level:4},{value:"Update SSH User Certificate",id:"update-ssh-user-certificate",level:2},{value:"Request",id:"request-4",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Response",id:"response-4",level:3},{value:"Fields",id:"fields-3",level:4}],q={toc:B},M="wrapper";function E(t){let{components:e,...a}=t;return(0,i.kt)(M,(0,n.Z)({},q,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ssh-user-certificates"},"SSH User Certificates"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"create-ssh-user-certificate"},"Create SSH User Certificate"),(0,i.kt)("p",null,"Create a new SSH User Certificate"),(0,i.kt)("h3",{id:"request"},"Request"),(0,i.kt)("p",null,"POST /ssh_user_certificates"),(0,i.kt)(s,{mdxType:"SSHUserCertificatesCreateRequest"}),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ssh_certificate_authority_id")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the ssh certificate authority that is used to sign this ssh user certificate")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"public_key")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"a public key in OpenSSH Authorized Keys format that this certificate signs")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"principals")),(0,i.kt)("td",{parentName:"tr",align:null},"List","<","string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"the list of principals included in the ssh user certificate. This is the list of usernames that the certificate holder may sign in as on a machine authorizing the signing certificate authority. Dangerously, if no principals are specified, this certificate may be used to log in as any user.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"critical_options")),(0,i.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"A map of critical options included in the certificate. Only two critical options are currently defined by OpenSSH: ",(0,i.kt)("inlineCode",{parentName:"td"},"force-command")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"source-address"),". See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys"},"the OpenSSH certificate protocol spec")," for additional details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"extensions")),(0,i.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"A map of extensions included in the certificate. Extensions are additional metadata that can be interpreted by the SSH server for any purpose. These can be used to permit or deny the ability to open a terminal, do port forwarding, x11 forwarding, and more. If unspecified, the certificate will include limited permissions with the following extension map: ",(0,i.kt)("inlineCode",{parentName:"td"},'{"permit-pty": "", "permit-user-rc": ""}')," OpenSSH understands a number of predefined extensions. See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys"},"the OpenSSH certificate protocol spec")," for additional details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"valid_after")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"The time when the user certificate becomes valid, in RFC 3339 format. Defaults to the current time if unspecified.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"valid_until")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"The time when this host certificate becomes invalid, in RFC 3339 format. If unspecified, a default value of 24 hours will be used. The OpenSSH certificates RFC calls this ",(0,i.kt)("inlineCode",{parentName:"td"},"valid_before"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"description")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"human-readable description of this SSH User Certificate. optional, max 255 bytes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metadata")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"arbitrary user-defined machine-readable data of this SSH User Certificate. optional, max 4096 bytes.")))),(0,i.kt)("h3",{id:"response"},"Response"),(0,i.kt)("p",null,"Returns a 201 response on success"),(0,i.kt)(o,{mdxType:"SSHUserCertificatesCreateResponse"}),(0,i.kt)("h4",{id:"fields"},"Fields"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"unique identifier for this SSH User Certificate")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"uri")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"URI of the SSH User Certificate API resource")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"created_at")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"timestamp when the SSH User Certificate API resource was created, RFC 3339 format")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"description")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"human-readable description of this SSH User Certificate. optional, max 255 bytes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metadata")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"arbitrary user-defined machine-readable data of this SSH User Certificate. optional, max 4096 bytes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"public_key")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"a public key in OpenSSH Authorized Keys format that this certificate signs")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"key_type")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the key type of the ",(0,i.kt)("inlineCode",{parentName:"td"},"public_key"),", one of ",(0,i.kt)("inlineCode",{parentName:"td"},"rsa"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"ecdsa")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"ed25519"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ssh_certificate_authority_id")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the ssh certificate authority that is used to sign this ssh user certificate")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"principals")),(0,i.kt)("td",{parentName:"tr",align:null},"List","<","string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"the list of principals included in the ssh user certificate. This is the list of usernames that the certificate holder may sign in as on a machine authorizing the signing certificate authority. Dangerously, if no principals are specified, this certificate may be used to log in as any user.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"critical_options")),(0,i.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"A map of critical options included in the certificate. Only two critical options are currently defined by OpenSSH: ",(0,i.kt)("inlineCode",{parentName:"td"},"force-command")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"source-address"),". See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys"},"the OpenSSH certificate protocol spec")," for additional details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"extensions")),(0,i.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"A map of extensions included in the certificate. Extensions are additional metadata that can be interpreted by the SSH server for any purpose. These can be used to permit or deny the ability to open a terminal, do port forwarding, x11 forwarding, and more. If unspecified, the certificate will include limited permissions with the following extension map: ",(0,i.kt)("inlineCode",{parentName:"td"},'{"permit-pty": "", "permit-user-rc": ""}')," OpenSSH understands a number of predefined extensions. See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys"},"the OpenSSH certificate protocol spec")," for additional details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"valid_after")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the time when the ssh host certificate becomes valid, in RFC 3339 format.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"valid_until")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the time after which the ssh host certificate becomes invalid, in RFC 3339 format. the OpenSSH certificates RFC calls this ",(0,i.kt)("inlineCode",{parentName:"td"},"valid_before"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"certificate")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the signed SSH certificate in OpenSSH Authorized Keys Format. this value should be placed in a ",(0,i.kt)("inlineCode",{parentName:"td"},"-cert.pub")," certificate file on disk that should be referenced in your ",(0,i.kt)("inlineCode",{parentName:"td"},"sshd_config")," configuration file with a ",(0,i.kt)("inlineCode",{parentName:"td"},"HostCertificate")," directive")))),(0,i.kt)("h2",{id:"delete-ssh-user-certificate"},"Delete SSH User Certificate"),(0,i.kt)("p",null,"Delete an SSH User Certificate"),(0,i.kt)("h3",{id:"request-1"},"Request"),(0,i.kt)("p",null,"DELETE /ssh_user_certificates/{id}"),(0,i.kt)(u,{mdxType:"SSHUserCertificatesDeleteRequest"}),(0,i.kt)("h3",{id:"response-1"},"Response"),(0,i.kt)("p",null,"Returns a 204 response with no body on success"),(0,i.kt)("h2",{id:"get-ssh-user-certificate"},"Get SSH User Certificate"),(0,i.kt)("p",null,"Get detailed information about an SSH User Certficate"),(0,i.kt)("h3",{id:"request-2"},"Request"),(0,i.kt)("p",null,"GET /ssh_user_certificates/{id}"),(0,i.kt)(A,{mdxType:"SSHUserCertificatesGetRequest"}),(0,i.kt)("h3",{id:"response-2"},"Response"),(0,i.kt)("p",null,"Returns a 200 response on success"),(0,i.kt)(f,{mdxType:"SSHUserCertificatesGetResponse"}),(0,i.kt)("h4",{id:"fields-1"},"Fields"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"unique identifier for this SSH User Certificate")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"uri")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"URI of the SSH User Certificate API resource")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"created_at")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"timestamp when the SSH User Certificate API resource was created, RFC 3339 format")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"description")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"human-readable description of this SSH User Certificate. optional, max 255 bytes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metadata")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"arbitrary user-defined machine-readable data of this SSH User Certificate. optional, max 4096 bytes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"public_key")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"a public key in OpenSSH Authorized Keys format that this certificate signs")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"key_type")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the key type of the ",(0,i.kt)("inlineCode",{parentName:"td"},"public_key"),", one of ",(0,i.kt)("inlineCode",{parentName:"td"},"rsa"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"ecdsa")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"ed25519"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ssh_certificate_authority_id")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the ssh certificate authority that is used to sign this ssh user certificate")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"principals")),(0,i.kt)("td",{parentName:"tr",align:null},"List","<","string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"the list of principals included in the ssh user certificate. This is the list of usernames that the certificate holder may sign in as on a machine authorizing the signing certificate authority. Dangerously, if no principals are specified, this certificate may be used to log in as any user.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"critical_options")),(0,i.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"A map of critical options included in the certificate. Only two critical options are currently defined by OpenSSH: ",(0,i.kt)("inlineCode",{parentName:"td"},"force-command")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"source-address"),". See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys"},"the OpenSSH certificate protocol spec")," for additional details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"extensions")),(0,i.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"A map of extensions included in the certificate. Extensions are additional metadata that can be interpreted by the SSH server for any purpose. These can be used to permit or deny the ability to open a terminal, do port forwarding, x11 forwarding, and more. If unspecified, the certificate will include limited permissions with the following extension map: ",(0,i.kt)("inlineCode",{parentName:"td"},'{"permit-pty": "", "permit-user-rc": ""}')," OpenSSH understands a number of predefined extensions. See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys"},"the OpenSSH certificate protocol spec")," for additional details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"valid_after")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the time when the ssh host certificate becomes valid, in RFC 3339 format.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"valid_until")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the time after which the ssh host certificate becomes invalid, in RFC 3339 format. the OpenSSH certificates RFC calls this ",(0,i.kt)("inlineCode",{parentName:"td"},"valid_before"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"certificate")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the signed SSH certificate in OpenSSH Authorized Keys Format. this value should be placed in a ",(0,i.kt)("inlineCode",{parentName:"td"},"-cert.pub")," certificate file on disk that should be referenced in your ",(0,i.kt)("inlineCode",{parentName:"td"},"sshd_config")," configuration file with a ",(0,i.kt)("inlineCode",{parentName:"td"},"HostCertificate")," directive")))),(0,i.kt)("h2",{id:"list-ssh-user-certificates"},"List SSH User Certificates"),(0,i.kt)("p",null,"List all SSH User Certificates issued on this account"),(0,i.kt)("h3",{id:"request-3"},"Request"),(0,i.kt)("p",null,"GET /ssh_user_certificates"),(0,i.kt)(C,{mdxType:"SSHUserCertificatesListRequest"}),(0,i.kt)("h3",{id:"response-3"},"Response"),(0,i.kt)("p",null,"Returns a 200 response on success"),(0,i.kt)(_,{mdxType:"SSHUserCertificatesListResponse"}),(0,i.kt)("h4",{id:"fields-2"},"Fields"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ssh_user_certificates")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"#sshusercertificate-fields"},"SSHUserCertificate")),(0,i.kt)("td",{parentName:"tr",align:null},"the list of all ssh user certificates on this account")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"uri")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"URI of the ssh user certificates list API resource")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"next_page_uri")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"URI of the next page, or null if there is no next page")))),(0,i.kt)("h4",{id:"sshusercertificate-fields"},"SSHUserCertificate fields"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"unique identifier for this SSH User Certificate")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"uri")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"URI of the SSH User Certificate API resource")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"created_at")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"timestamp when the SSH User Certificate API resource was created, RFC 3339 format")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"description")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"human-readable description of this SSH User Certificate. optional, max 255 bytes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metadata")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"arbitrary user-defined machine-readable data of this SSH User Certificate. optional, max 4096 bytes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"public_key")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"a public key in OpenSSH Authorized Keys format that this certificate signs")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"key_type")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the key type of the ",(0,i.kt)("inlineCode",{parentName:"td"},"public_key"),", one of ",(0,i.kt)("inlineCode",{parentName:"td"},"rsa"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"ecdsa")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"ed25519"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ssh_certificate_authority_id")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the ssh certificate authority that is used to sign this ssh user certificate")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"principals")),(0,i.kt)("td",{parentName:"tr",align:null},"List","<","string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"the list of principals included in the ssh user certificate. This is the list of usernames that the certificate holder may sign in as on a machine authorizing the signing certificate authority. Dangerously, if no principals are specified, this certificate may be used to log in as any user.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"critical_options")),(0,i.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"A map of critical options included in the certificate. Only two critical options are currently defined by OpenSSH: ",(0,i.kt)("inlineCode",{parentName:"td"},"force-command")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"source-address"),". See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys"},"the OpenSSH certificate protocol spec")," for additional details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"extensions")),(0,i.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"A map of extensions included in the certificate. Extensions are additional metadata that can be interpreted by the SSH server for any purpose. These can be used to permit or deny the ability to open a terminal, do port forwarding, x11 forwarding, and more. If unspecified, the certificate will include limited permissions with the following extension map: ",(0,i.kt)("inlineCode",{parentName:"td"},'{"permit-pty": "", "permit-user-rc": ""}')," OpenSSH understands a number of predefined extensions. See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys"},"the OpenSSH certificate protocol spec")," for additional details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"valid_after")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the time when the ssh host certificate becomes valid, in RFC 3339 format.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"valid_until")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the time after which the ssh host certificate becomes invalid, in RFC 3339 format. the OpenSSH certificates RFC calls this ",(0,i.kt)("inlineCode",{parentName:"td"},"valid_before"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"certificate")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the signed SSH certificate in OpenSSH Authorized Keys Format. this value should be placed in a ",(0,i.kt)("inlineCode",{parentName:"td"},"-cert.pub")," certificate file on disk that should be referenced in your ",(0,i.kt)("inlineCode",{parentName:"td"},"sshd_config")," configuration file with a ",(0,i.kt)("inlineCode",{parentName:"td"},"HostCertificate")," directive")))),(0,i.kt)("h2",{id:"update-ssh-user-certificate"},"Update SSH User Certificate"),(0,i.kt)("p",null,"Update an SSH User Certificate"),(0,i.kt)("h3",{id:"request-4"},"Request"),(0,i.kt)("p",null,"PATCH /ssh_user_certificates/{id}"),(0,i.kt)(R,{mdxType:"SSHUserCertificatesUpdateRequest"}),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"description")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"human-readable description of this SSH User Certificate. optional, max 255 bytes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metadata")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"arbitrary user-defined machine-readable data of this SSH User Certificate. optional, max 4096 bytes.")))),(0,i.kt)("h3",{id:"response-4"},"Response"),(0,i.kt)("p",null,"Returns a 200 response on success"),(0,i.kt)(U,{mdxType:"SSHUserCertificatesUpdateResponse"}),(0,i.kt)("h4",{id:"fields-3"},"Fields"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"),(0,i.kt)("th",{parentName:"tr",align:null},"\xa0"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"id")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"unique identifier for this SSH User Certificate")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"uri")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"URI of the SSH User Certificate API resource")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"created_at")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"timestamp when the SSH User Certificate API resource was created, RFC 3339 format")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"description")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"human-readable description of this SSH User Certificate. optional, max 255 bytes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"metadata")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"arbitrary user-defined machine-readable data of this SSH User Certificate. optional, max 4096 bytes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"public_key")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"a public key in OpenSSH Authorized Keys format that this certificate signs")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"key_type")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the key type of the ",(0,i.kt)("inlineCode",{parentName:"td"},"public_key"),", one of ",(0,i.kt)("inlineCode",{parentName:"td"},"rsa"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"ecdsa")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"ed25519"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ssh_certificate_authority_id")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the ssh certificate authority that is used to sign this ssh user certificate")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"principals")),(0,i.kt)("td",{parentName:"tr",align:null},"List","<","string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"the list of principals included in the ssh user certificate. This is the list of usernames that the certificate holder may sign in as on a machine authorizing the signing certificate authority. Dangerously, if no principals are specified, this certificate may be used to log in as any user.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"critical_options")),(0,i.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"A map of critical options included in the certificate. Only two critical options are currently defined by OpenSSH: ",(0,i.kt)("inlineCode",{parentName:"td"},"force-command")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"source-address"),". See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys"},"the OpenSSH certificate protocol spec")," for additional details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"extensions")),(0,i.kt)("td",{parentName:"tr",align:null},"Map","<","string, string",">"),(0,i.kt)("td",{parentName:"tr",align:null},"A map of extensions included in the certificate. Extensions are additional metadata that can be interpreted by the SSH server for any purpose. These can be used to permit or deny the ability to open a terminal, do port forwarding, x11 forwarding, and more. If unspecified, the certificate will include limited permissions with the following extension map: ",(0,i.kt)("inlineCode",{parentName:"td"},'{"permit-pty": "", "permit-user-rc": ""}')," OpenSSH understands a number of predefined extensions. See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/openssh/openssh-portable/blob/master/PROTOCOL.certkeys"},"the OpenSSH certificate protocol spec")," for additional details.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"valid_after")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the time when the ssh host certificate becomes valid, in RFC 3339 format.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"valid_until")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the time after which the ssh host certificate becomes invalid, in RFC 3339 format. the OpenSSH certificates RFC calls this ",(0,i.kt)("inlineCode",{parentName:"td"},"valid_before"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"certificate")),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},"the signed SSH certificate in OpenSSH Authorized Keys Format. this value should be placed in a ",(0,i.kt)("inlineCode",{parentName:"td"},"-cert.pub")," certificate file on disk that should be referenced in your ",(0,i.kt)("inlineCode",{parentName:"td"},"sshd_config")," configuration file with a ",(0,i.kt)("inlineCode",{parentName:"td"},"HostCertificate")," directive")))))}E.isMDXComponent=!0}}]);